[{"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\index.tsx":"1","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\App.tsx":"3","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\index.tsx":"4","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\episodePage\\index.tsx":"5","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\generalComponents\\navigationBar.tsx":"6","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\charactersComponent\\index.tsx":"7","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\deathsComponent\\index.tsx":"8","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\episodePage\\dropdown\\index.tsx":"9","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\charactersComponent\\sortByComponent.tsx":"10"},{"size":500,"mtime":1608853761836,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1608853761836,"results":"13","hashOfConfig":"12"},{"size":739,"mtime":1609206862579,"results":"14","hashOfConfig":"12"},{"size":814,"mtime":1609204970524,"results":"15","hashOfConfig":"12"},{"size":426,"mtime":1609207144085,"results":"16","hashOfConfig":"12"},{"size":1414,"mtime":1609206957472,"results":"17","hashOfConfig":"12"},{"size":4719,"mtime":1609204970515,"results":"18","hashOfConfig":"12"},{"size":2348,"mtime":1609204970523,"results":"19","hashOfConfig":"12"},{"size":2165,"mtime":1609207055389,"results":"20","hashOfConfig":"12"},{"size":4495,"mtime":1609205378126,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"u8ocbh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\index.tsx",[],["46","47"],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\App.tsx",["48"],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\index.tsx",[],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\episodePage\\index.tsx",[],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\generalComponents\\navigationBar.tsx",["49","50","51","52","53"],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\charactersComponent\\index.tsx",["54","55"],"import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport React from 'react';\r\nimport SortBy from './sortByComponent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      margin: 10,\r\n\r\n    },\r\n  });\r\n\r\nconst Characters = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const charactersData = [\r\n        {\r\n            name: 'death1',\r\n            occupation: 'cause1',\r\n            status: 'responsible1',\r\n            birthday: 'lastWords1',\r\n            image: 'image1',\r\n            portrayer: 'portrayer1',\r\n        },\r\n        {\r\n            name: 'death2',\r\n            occupation: 'cause2',\r\n            status: 'responsible2',\r\n            birthday: 'lastWords2',\r\n            image: 'image2',\r\n            portrayer: 'portrayer2',\r\n        },\r\n        {\r\n            name: 'death3',\r\n            occupation: 'cause3',\r\n            status: 'responsible3',\r\n            birthday: 'lastWords3',\r\n            image: 'image3',\r\n            portrayer: 'portrayer3',\r\n        },\r\n        {\r\n            name: 'death4',\r\n            occupation: 'cause4',\r\n            status: 'responsible4',\r\n            birthday: 'lastWords4',\r\n            image: 'image4',\r\n            portrayer: 'portrayer4',\r\n        },\r\n        {\r\n            name: 'death5',\r\n            occupation: 'cause5',\r\n            status: 'responsible5',\r\n            birthday: 'lastWords5',\r\n            image: 'image5',\r\n            portrayer: 'portrayer5',\r\n        },\r\n        {\r\n            name: 'death6',\r\n            occupation: 'cause6',\r\n            status: 'responsible6',\r\n            birthday: 'lastWords6',\r\n            image: 'image6',\r\n            portrayer: 'portrayer6',\r\n        },\r\n    ];  \r\n    return(\r\n        <>\r\n            <SortBy></SortBy>\r\n            <Grid container={true} justify='space-evenly' direction='row' alignItems=\"center\" spacing={4}>\r\n                    {\r\n                        charactersData.map((character, index)=>{\r\n                            return(\r\n                                <Grid item xs={4}>\r\n                                    <Card className={classes.root} key={index}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"100\"\r\n                                            image={character.image}\r\n                                            title=\"Contemplative Reptile\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {character.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                    {character.occupation}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                    {character.status}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                    {character.birthday}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                    {character.portrayer}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                    }\r\n            </Grid>     \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Characters;","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\deathsComponent\\index.tsx",["56","57"],"import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport { idText } from 'typescript';\r\n\r\n\r\nconst Deaths = () => {\r\n    let deathCounter: number = 0;\r\n    const deathsData = [\r\n        {\r\n            death: 'death1',\r\n            cause: 'cause1',\r\n            responsible: 'responsible1',\r\n            lastWords: 'lastWords1',\r\n        },\r\n        {\r\n            death: 'death2',\r\n            cause: 'cause2',\r\n            responsible: 'responsible2',\r\n            lastWords: 'lastWords2',\r\n        },\r\n        {\r\n            death: 'death3',\r\n            cause: 'cause3',\r\n            responsible: 'responsible3',\r\n            lastWords: 'lastWords3',\r\n        },\r\n        {\r\n            death: 'death4',\r\n            cause: 'cause4',\r\n            responsible: 'responsible4',\r\n            lastWords: 'lastWords4',\r\n        },\r\n        {\r\n            death: 'death5',\r\n            cause: 'cause5',\r\n            responsible: 'responsible5',\r\n            lastWords: 'lastWords5',\r\n        },\r\n    ];\r\n\r\n    return(\r\n        <>  \r\n            <Typography variant='h6' component='h2'>TOTAL DEATHS: {deathCounter} </Typography>\r\n            <Typography variant='h5'>DEATHS</Typography>\r\n            {\r\n                deathsData.map((deathInfo, id) => {\r\n                    return(\r\n                        <Grid item key={id}>\r\n                            <Paper style={\r\n                                {height: 105, \r\n                                width: '100%',\r\n                                backgroundColor: '#ffff',\r\n                                margin: 10,\r\n                                }\r\n                                    }> \r\n                                <Typography>Death: {deathInfo.death}</Typography>\r\n                                <Typography>Cause: {deathInfo.cause}</Typography>\r\n                                <Typography>Responsible: {deathInfo.responsible}</Typography>\r\n                                <Typography>Last words: {deathInfo.lastWords}</Typography>\r\n                            </Paper>\r\n                        </Grid>);\r\n                    }\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Deaths;","C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\episodePage\\dropdown\\index.tsx",["58","59","60"],"C:\\Users\\Keylor Morataya\\Desktop\\Practicas_React\\keylor_morataya_tecnic_test_gamanza\\breaking-bad-app\\src\\components\\homePage\\charactersComponent\\sortByComponent.tsx",["61"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst SortBy = () => {\r\n\r\n    const constanteVectorCharacters = [\r\n        {\r\n            char_id: 1,\r\n            name: \"Walter White\",\r\n            birthday: \"09-07-1958\",\r\n            occupation: [\r\n                \"High School Chemistry Teacher\",\r\n                \"Meth King Pin\"\r\n            ],\r\n            img: \"https://images.amcnetworks.com/amc.com/wp-content/uploads/2015/04/cast_bb_700x1000_walter-white-lg.jpg\",\r\n            status: \"Deceased\",\r\n            appearance: [1, 2, 3, 4, 5],\r\n            nickname: \"Heisenberg\",\r\n            portrayed: \"Bryan Cranston\"\r\n        },\r\n        {\r\n            char_id: 4,\r\n            name: \"Walter White Jr.\",\r\n            birthday: \"07-08-1993\",\r\n            occupation: [\r\n                \"Teenager\"\r\n            ],\r\n            img: \"https://media1.popsugar-assets.com/files/thumbor/WeLUSvbA...\",\r\n            status: \"Alive\",\r\n            nickname: \"Flynn\",\r\n            appearance: [ 1, 2, 3, 4, 5 ],\r\n            portrayed: \"RJ Mitte\",\r\n            category: \"Breaking Bad\",\r\n            better_call_saul_appearance: [ ]\r\n        }\r\n    ];\r\n    const sortByName = () => {\r\n        let inferiorIndex: number = 0;\r\n        let alphabeticName: string;\r\n        let auxiliarCharacter: any = {};\r\n        let actualCharacter: any = {};\r\n        let actualAlphabeticName: string;\r\n        let indexWhereIsTheAlphabeticName: number = 0;\r\n\r\n        for(let i = 0; i < constanteVectorCharacters.length; i++){\r\n            actualCharacter = constanteVectorCharacters[i];\r\n            alphabeticName = constanteVectorCharacters[i].name;\r\n            for(let j = inferiorIndex; j < constanteVectorCharacters.length - 1; j++){\r\n                actualAlphabeticName = constanteVectorCharacters[j+1].name;\r\n                if(alphabeticName > actualAlphabeticName){\r\n                    alphabeticName = actualAlphabeticName;\r\n                    actualCharacter = constanteVectorCharacters[j+1];\r\n                    indexWhereIsTheAlphabeticName = j+1;\r\n                }\r\n            }\r\n            auxiliarCharacter = actualCharacter;\r\n            constanteVectorCharacters[indexWhereIsTheAlphabeticName] = constanteVectorCharacters[inferiorIndex]\r\n            constanteVectorCharacters[inferiorIndex] = auxiliarCharacter; \r\n            inferiorIndex++;\r\n        }\r\n        console.log(constanteVectorCharacters);\r\n    }\r\n\r\n    const sortByBirthday = () =>{\r\n        let inferiorIndex: number = 0;\r\n        let oldestBirthday: Date;\r\n        let auxiliarCharacter: any = {};\r\n        let oldestCharacter: any = {};\r\n        let actualBirthday: Date;\r\n        let indexWhereIsTheOldestCharacter: number = 0;\r\n\r\n        for(let i = 0; i < constanteVectorCharacters.length; i++){\r\n            oldestCharacter = constanteVectorCharacters[i];\r\n            oldestBirthday = new Date(constanteVectorCharacters[i].birthday);\r\n            for(let j = inferiorIndex; j < constanteVectorCharacters.length - 1; j++){\r\n                actualBirthday = new Date(constanteVectorCharacters[j+1].birthday);\r\n                if(oldestBirthday > actualBirthday){\r\n                    oldestBirthday = actualBirthday;\r\n                    oldestCharacter = constanteVectorCharacters[j+1];\r\n                    indexWhereIsTheOldestCharacter = j+1;\r\n                }\r\n            }\r\n            auxiliarCharacter = oldestCharacter;\r\n            constanteVectorCharacters[indexWhereIsTheOldestCharacter] = constanteVectorCharacters[inferiorIndex]\r\n            constanteVectorCharacters[inferiorIndex] = auxiliarCharacter; \r\n            inferiorIndex++;\r\n        }\r\n        console.log(constanteVectorCharacters);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Grid container={true} justify='flex-start'>\r\n                <Grid>\r\n                    <Typography variant='h5' >SORT BY</Typography>\r\n                    <ButtonGroup>\r\n                        <Button onClick={sortByName}>Name</Button>\r\n                        <Button onClick={sortByBirthday}>Birthday</Button>\r\n                        <Button>Portrayer</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default SortBy;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":17},{"ruleId":"66","severity":1,"message":"72","line":7,"column":24,"nodeType":"68","messageId":"69","endLine":7,"endColumn":28},{"ruleId":"66","severity":1,"message":"73","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":9,"column":8,"nodeType":"68","messageId":"69","endLine":9,"endColumn":18},{"ruleId":"66","severity":1,"message":"75","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":17},{"ruleId":"66","severity":1,"message":"76","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":13},{"ruleId":"66","severity":1,"message":"75","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"77","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":16},{"ruleId":"66","severity":1,"message":"78","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":22},{"ruleId":"66","severity":1,"message":"79","line":8,"column":8,"nodeType":"68","messageId":"69","endLine":8,"endColumn":20},{"ruleId":"66","severity":1,"message":"80","line":31,"column":11,"nodeType":"68","messageId":"69","endLine":31,"endColumn":23},{"ruleId":"66","severity":1,"message":"81","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":20},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'fade' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'idText' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'handleChange' is assigned a value but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation"]